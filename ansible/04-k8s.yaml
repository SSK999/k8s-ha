---
- hosts: control_plane,workers
  become: yes
  tasks:
    - name: Disable swap
      become: yes
      shell: swapoff -a

    - name: Disable SWAP in fstab since kubernetes can't work with swap enabled
      replace:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
        replace: '# \1'

    - name: Disable firewall
      shell: |
        systemctl disable --now ufw >/dev/null 2>&1    

    - name: bridge network
      copy:
        dest: "/etc/modules-load.d/containerd.conf"
        content: |
          overlay
          br_netfilter

    - name: bridge network
      copy:
        dest: "/etc/sysctl.d/kubernetes.conf"
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward                 = 1

    - name: apply bridge network
      become: yes
      shell: modprobe overlay && modprobe br_netfilter && sysctl --system

    - name: Install container runtime (CRI)
      apt:
        name:
          - containerd
        state: present
        update_cache: true

    - name: Tell k8s to use systemd
      shell: |
        mkdir -p /etc/containerd && \
        containerd config default > /etc/containerd/config.toml && \
        sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml

    - name: containerd services
      ansible.builtin.systemd:
        state: restarted
        name: containerd

    - name: add Kubernetes apt-key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: add Kubernetes' APT repository
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: 'kubernetes'

    - name: install kubelet
      apt:
        name: kubelet={{ K8S_VERSION }}
        state: present
        update_cache: true

    - name: install kubeadm
      apt:
        name: kubeadm={{ K8S_VERSION }}
        state: present

    - name: Hold versions
      shell: apt-mark hold kubelet kubeadm

    - name: install kubectl
      apt:
        name: kubectl={{ K8S_VERSION }}
        state: present
        force: yes

    - name: Hold versions
      shell: apt-mark hold kubectl

#- hosts: control_plane
#  become: yes
#  tasks:
#    - name: Pre-download images
#      shell: kubeadm config images pull
